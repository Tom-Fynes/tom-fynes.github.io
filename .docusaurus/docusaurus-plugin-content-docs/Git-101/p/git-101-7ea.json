{"version":{"pluginId":"Git-101","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/git_101/intro","docId":"intro","unlisted":false},{"type":"category","label":"Grade 1","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is Git","href":"/git_101/Grade 1/What is Git","docId":"Grade 1/What is Git","unlisted":false},{"type":"link","label":"Installing Git","href":"/git_101/Grade 1/Installing Git","docId":"Grade 1/Installing Git","unlisted":false},{"type":"link","label":"Setting Username and Email","href":"/git_101/Grade 1/Setting Username and Email","docId":"Grade 1/Setting Username and Email","unlisted":false},{"type":"link","label":"Git Init","href":"/git_101/Grade 1/Git Init","docId":"Grade 1/Git Init","unlisted":false},{"type":"link","label":"Git Clone","href":"/git_101/Grade 1/Git Clone","docId":"Grade 1/Git Clone","unlisted":false}]},{"type":"category","label":"Grade 2","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Understanding the Git Workflow","href":"/git_101/Grade 2/Understanding the Git Workflow","docId":"Grade 2/Understanding the Git Workflow","unlisted":false},{"type":"link","label":"Git Add","href":"/git_101/Grade 2/Git Add","docId":"Grade 2/Git Add","unlisted":false},{"type":"link","label":"Git Commit","href":"/git_101/Grade 2/Git Commit","docId":"Grade 2/Git Commit","unlisted":false}]}]},"docs":{"Grade 1/Git Clone":{"id":"Grade 1/Git Clone","title":"Git Clone","description":"Instead of starting a new project from scratch, you can use Git to clone an existing repository — copying all its files, branches, and history to your local machine.","sidebar":"tutorialSidebar"},"Grade 1/Git Init":{"id":"Grade 1/Git Init","title":"Git Init","description":"The first step to using Git in any project is to initialize a repository. This sets up a hidden .git directory that tracks your changes, branches, history, and more.","sidebar":"tutorialSidebar"},"Grade 1/Installing Git":{"id":"Grade 1/Installing Git","title":"Installing Git","description":"Before you can start using Git, you need to install it on your computer. Below are step-by-step instructions for installing Git on Windows, macOS, and Linux.","sidebar":"tutorialSidebar"},"Grade 1/Setting Username and Email":{"id":"Grade 1/Setting Username and Email","title":"Setting Username and Email","description":"Before making your first commit, it's essential to tell Git who you are. Git uses your username and email address to label every commit you make. This helps with collaboration, tracking changes, and understanding project history.","sidebar":"tutorialSidebar"},"Grade 1/What is Git":{"id":"Grade 1/What is Git","title":"What is Git","description":"Git is a distributed version control system (VCS) that helps developers manage and track changes in their codebase over time. It allows multiple people to collaborate on projects efficiently and safely, without fear of overwriting each other's work.","sidebar":"tutorialSidebar"},"Grade 2/Git Add":{"id":"Grade 2/Git Add","title":"Git Add","description":"Once you’ve made changes in your project, the next step is to stage those changes using git add. This prepares them to be included in your next commit.","sidebar":"tutorialSidebar"},"Grade 2/Git Commit":{"id":"Grade 2/Git Commit","title":"Git Commit","description":"After staging your changes with git add, the next step is to commit them to your Git repository. Commits act like snapshots of your project at a specific moment in time.","sidebar":"tutorialSidebar"},"Grade 2/Understanding the Git Workflow":{"id":"Grade 2/Understanding the Git Workflow","title":"Understanding the Git Workflow","description":"To use Git effectively, it’s important to understand the workflow which is broken into three parts:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"This course is designed for developers, data professionals, and anyone interested in mastering version control using Git. By the end of this course, you'll be proficient in using Git for version control and collaborating effectively using GitHub.","sidebar":"tutorialSidebar"}}}}